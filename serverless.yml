app: sample-service
service: sample-service
frameworkVersion: "3"
useDotenv: true

provider:
  name: aws
  runtime: nodejs18.x
  architecture: x86_64
  stage: dev
  region: us-east-1
  memorySize: 512
  timeout: 30
  stackName: sample-service
  deploymentMethod: changesets
  environment:
    NODE_ENV: ${env:NODE_ENV}
  httpApi:
    cors: true
  # attach policies to the service. e.g:
  # iam:
  #   role:
  #     statements:
  #     - Effect: Allow
  #       Action:
  #       - "dynamodb:*"
  #       Resource: "*"

plugins:
  - serverless-plugin-typescript
  - serverless-dotenv-plugin
  - serverless-offline

custom:
  esbuild:
    watch:
      pattern: src/**/*.ts

functions:
  createUser:
    handler: src/handlers/user/create.handler
    events:
      - http:
          path: /api/v1/users
          method: post
  findAllUser:
    handler: src/handlers/user/findAll.handler
    events:
      - http:
          path: /api/v1/users
          method: get
  findOneUser:
    handler: src/handlers/user/findOne.handler
    events:
      - http:
          path: /api/v1/users/{userId}
          method: get
  updateUser:
    handler: src/handlers/user/update.handler
    events:
      - http:
          path: /api/v1/users/{userId}
          method: patch
  deleteUser:
    handler: src/handlers/user/delete.handler
    events:
      - http:
          path: /api/v1/users/{userId}
          method: delete
